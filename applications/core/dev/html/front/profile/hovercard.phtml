<ips:template parameters="$member, $addWarningUrl" />
{{$rnd = mt_rand();}}
{{$referrer = \IPS\Request::i()->referrer;}}
{{$coverPhoto = $member->coverPhoto();}}
<!-- When altering this template be sure to also check for similar in main profile view -->
<div class="cUserHovercard" id="elUserHovercard_{$member->member_id}{$rnd}">
	<div class='ipsPageHead_special cUserHovercard__header' id='elProfileHeader_{$rnd}' data-controller='core.global.core.coverPhoto' data-url="{$member->url()->csrf()}" data-coverOffset='{$coverPhoto->offset}'>
		{{if $coverPhoto->file}}
			<div class='ipsCoverPhoto_container'>
				<img src='{$coverPhoto->file->url}' class='ipsCoverPhoto_photo' alt=''>
			</div>
		{{else}}
			<div class='ipsCoverPhoto_container' style="background-color: {$member->coverPhotoBackgroundColor()}">
				<img src='{resource="pattern.png" app="core" location="global"}' class='ipsCoverPhoto_photo' data-action="toggleCoverPhoto" alt=''>
			</div>
		{{endif}}
		<a href='{$member->url()}'><img src='{$member->photo}' class="ipsUserPhoto ipsUserPhoto_large ipsUserPhoto_outlined ipsUserPhoto_outlined:medium cUserHovercard__photo"></a>
	</div>
	
	<div class='ipsPadding ipsFlex ipsFlex-fd:column ipsFlex-ai:center'>
		<h2 class='ipsType_reset ipsType_center ipsPos_relative cUserHovercard__title'>
			<a href='{$member->url()}'>{$member->name}</a>
			{{if \IPS\Member::loggedIn()->member_id AND \IPS\Member::loggedIn()->member_id === $member->member_id AND $member->isOnlineAnonymously()}}
				<span class='cProfileHeader_history ipsType_large' title='{lang="member_is_currently_anon"}' data-ipsTooltip>
					<i class='fa fa-eye-slash'></i>
				</span>
			{{endif}}
		</h2>
		<p class='ipsType_reset ipsType_normal'>
			{expression="\IPS\Member\Group::load( $member->member_group_id )->formattedName" raw="true"}
		</p>
		<p class='ipsType_reset ipsType_medium ipsType_light'>
			{lang="members_joined"} {datetime="$member->joined"}
		</p>
		{{if $member->last_activity && ( ( !$member->isOnlineAnonymously() ) OR ( $member->isOnlineAnonymously() AND \IPS\Member::loggedIn()->isAdmin() ) )}}
			<p class='ipsType_reset ipsType_medium ipsType_light'>
				{{if $member->isOnline() AND ( !$member->isOnlineAnonymously() OR ( $member->isOnlineAnonymously() AND \IPS\Member::loggedIn()->isAdmin() ) )}}
					<i class="fa fa-circle ipsType_medium ipsOnlineStatus_online" data-ipsTooltip title='{{if $member->isOnlineAnonymously()}}{lang="online_now_anon" sprintf="$member->name"}{{elseif $member->isOnline()}}{lang="online_now" sprintf="$member->name"}{{endif}}'></i>
				{{endif}}
				{{if $member->isOnline() AND ( !$member->isOnlineAnonymously() OR ( $member->isOnlineAnonymously() AND \IPS\Member::loggedIn()->isAdmin() ) )}}
					{lang="members_online_now"}
				{{elseif $member->last_activity}}
					{lang="members_last_visit"} {datetime="$member->last_activity"}
				{{endif}}
			</p>
		{{endif}}

		<dl class='ipsMargin:none ipsMargin_top ipsAreaBackground_light ipsRadius ipsFlex ipsFlex-ai:center ipsFlex-jc:around ipsFlex-as:stretch ipsPadding:half'>
			<div class='ipsPadding_horizontal:half ipsFlex ipsFlex-fd:column-reverse ipsFlex-ai:center'>
				<dt class='ipsType_light'>{lang="members_member_posts"}</dt>
				<dd class='ipsType_semiBold ipsType_large ipsType_dark ipsMargin:none'>{number="$member->member_posts" format="short"}</dd>
			</div>
			{{if settings.reputation_enabled and settings.reputation_show_profile}}
				<div class='ipsPadding_horizontal:half ipsFlex ipsFlex-fd:column-reverse ipsFlex-ai:center'>
					<dt class='ipsType_light'>{lang="reputation_title"}</dt>
					<dd class='ipsType_semiBold ipsType_large ipsType_dark ipsMargin:none'>{number="$member->pp_reputation_points" format="short"}</dd>
				</div>
			{{endif}}
			{{if $member->canHaveAchievements() and \IPS\core\Achievements\Badge::show() AND \IPS\core\Achievements\Badge::getStore()}}
				<div class='ipsPadding_horizontal:half ipsFlex ipsFlex-fd:column-reverse ipsFlex-ai:center'>
					<dt class='ipsType_light'>{lang="badges"}</dt>
					<dd class='ipsType_semiBold ipsType_large ipsType_dark ipsMargin:none'>{number="$member->badgeCount()" format="short"}</dd>
				</div>
			{{endif}}
		</dl>

		{{if $member->canHaveAchievements() and \IPS\core\Achievements\Rank::show() AND ( \count( \IPS\core\Achievements\Rank::getStore() ) && $member->rank() ) || ( \count( \IPS\core\Achievements\Badge::getStore() ) && \count( $member->recentBadges( 5 ) ) )}}
			<div class='ipsFlex ipsFlex-ai:center ipsFlex-jc:between ipsMargin_top ipsFlex-as:stretch'>
				{{if \IPS\core\Achievements\Rank::getStore() && $rank = $member->rank()}}
					<div class='ipsFlex ipsFlex-ai:center'>
						{$rank->html( 'ipsDimension:4' )|raw}
						<div class='ipsMargin_left:half ipsType_medium'>
							<p class='ipsType_reset ipsType_semiBold'>{$rank->_title}</p>
							{{if $rankEarned = $member->rankEarned()}}
								<p class='ipsType_reset ipsType_light'>{datetime="$rankEarned" format="short"}</p>
							{{endif}}
						</div>
					</div>
				{{else}}
					<span></span>
				{{endif}}
				{{if \IPS\core\Achievements\Badge::show() AND \IPS\core\Achievements\Badge::getStore()}}
					{{$recentBadges = $member->recentBadges( 5 );}}
					{{if \count( $recentBadges )}}
						<ul class="ipsCaterpillar ipsMargin_left">
							{{foreach $member->recentBadges( 5 ) as $badge}}
								<li class='ipsCaterpillar__item'>
									{$badge->html( 'ipsDimension:4', TRUE, TRUE )|raw}
								</li>
							{{endforeach}}
						</ul>
					{{endif}}
				{{endif}}
			</div>
		{{endif}}

		{{if \IPS\Member::loggedIn()->modPermission('can_see_emails') || \IPS\Settings::i()->warn_on and !$member->inGroup( explode( ',', \IPS\Settings::i()->warn_protected ) ) and ( \IPS\Member::loggedIn()->modPermission('mod_see_warn') or ( \IPS\Settings::i()->warn_show_own and \IPS\Member::loggedIn()->member_id == $member->member_id ) )}}
			<div class='ipsBorder_top ipsMargin_top ipsFlex ipsFlex-ai:center ipsFlex-jc:between ipsFlex-as:stretch ipsPadding_top'>
				<div class='ipsType_medium ipsMargin_right'>
					{{if \IPS\Settings::i()->warn_on and !$member->inGroup( explode( ',', \IPS\Settings::i()->warn_protected ) ) and ( \IPS\Member::loggedIn()->modPermission('mod_see_warn') or ( \IPS\Settings::i()->warn_show_own and \IPS\Member::loggedIn()->member_id == $member->member_id ) )}}
						<p class='ipsType_reset ipsType_semiBold'>
							<i class='fa fa-info-circle fa-fw ipsType_light'></i> {lang="member_warn_level" pluralize="$member->warn_level"}
						</p>
					{{endif}}
					{{if \IPS\Member::loggedIn()->modPermission('can_see_emails')}}
						<p class='ipsType_reset ipsType_semiBold ipsTruncate ipsTruncate_line'>
							<i class='fa fa-envelope fa-fw ipsType_light'></i>
                            <a href='mailto:{$member->email}' title='{lang="email_this_user"}'>{$member->email}</a>
						</p>
					{{endif}}
				</div>

				{{if ( member.canWarn( $member ) || ( member.modPermission('can_flag_as_spammer') and !$member->modPermission() and !$member->isAdmin() ) ) and $member->member_id != member.member_id }}
					<a href="#elUserHovercard_{$member->member_id}_more_menu" id="elUserHovercard_{$member->member_id}{$rnd}_more" title='{lang="moderator_tools"}...' data-ipsTooltip data-ipsMenu data-ipsMenu-appendTo="#elUserHovercard_{$member->member_id}{$rnd}" class='ipsButton ipsButton_light ipsButton_verySmall'>
						<i class="fa fa-ellipsis-h"></i>
					</a>
				{{endif}}				
			</div>
		{{endif}}
	</div>
	<div class='ipsBorder_top ipsPadding'>
		<div class='ipsList_reset ipsFlex ipsFlex-ai:center ipsGap:3 ipsGap_row:0'>
			{{if ( \IPS\Member::loggedIn()->member_id and \IPS\Member::loggedIn()->member_id !== $member->member_id ) && !$member->members_disable_pm and !\IPS\Member::loggedIn()->members_disable_pm and \IPS\Member::loggedIn()->canAccessModule( \IPS\Application\Module::get( 'core', 'messaging' ) )}}
				<a href='{url="app=core&module=messaging&controller=messenger&do=compose&to={$member->member_id}" seoTemplate="messenger_compose"}' data-ipsDialog data-ipsDialog-title='{lang="compose_new"}' data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage="{lang="message_sent"}" data-ipsDialog-forceReload class='ipsFlex-flex:11 ipsButton ipsButton_light ipsButton_verySmall'>{lang="message_send"}</a>
			{{endif}}
			<a href="{url="app=core&module=members&controller=profile&do=content&id={$member->member_id}" base="front" seoTemplate="profile_content" seoTitle="$member->members_seo_name"}" class='ipsFlex-flex:11 ipsButton ipsButton_light ipsButton_verySmall'>{lang="find_content"}</a>
			{{if \IPS\Member::loggedIn()->member_id && $member->canBeIgnored() and \IPS\Member::loggedIn()->member_id !== $member->member_id }}
				<a href="{url="app=core&module=system&controller=ignore&id={$member->member_id}" seoTemplate="ignore"}" class='ipsFlex-flex:11 ipsButton ipsButton_light ipsButton_verySmall'>{lang="add_ignore"}</a>
			{{endif}}
		</div>
	</div>


	{{if ( \IPS\Member::loggedIn()->modPermission('can_flag_as_spammer') AND $member->member_id != \IPS\Member::loggedIn()->member_id ) || member.canWarn( $member ) || \IPS\Member::loggedIn()->modPermission('can_manage_alerts')}}
		<ul class="ipsMenu ipsMenu_narrow ipsHide" id="elUserHovercard_{$member->member_id}{$rnd}_more_menu">
			{{if member.modPermission('can_flag_as_spammer') and $member->member_id != member.member_id and !$member->modPermission() and !$member->isAdmin()}}
				{{if $member->members_bitoptions['bw_is_spammer']}}
					<li class="ipsMenu_item"><a href='{url="app=core&module=system&controller=moderation&do=flagAsSpammer&id={$member->member_id}&s=0&referrer={$referrer}" seoTemplate="flag_as_spammer" seoTitle="$member->members_seo_name" csrf="true"}' data-confirm data-confirmSubMessage="{lang="spam_unflag_confirm"}"><i class="fa fa-flag fa-fw"></i> {lang="spam_unflag"}</a></li>
				{{else}}
					<li class="ipsMenu_item"><a href='{url="app=core&module=system&controller=moderation&do=flagAsSpammer&id={$member->member_id}&s=1&referrer={$referrer}" seoTemplate="flag_as_spammer" seoTitle="$member->members_seo_name" csrf="true"}' data-confirm><i class="fa fa-flag fa-fw"></i> {lang="spam_flag"}</a></li>
				{{endif}}
			{{endif}}
			{{if member.canWarn( $member )}}
				<li class="ipsMenu_item"><a href="{$addWarningUrl}" title='{lang="warn_user_title"}' data-ipsDialog data-ipsDialog-title='{lang="warn_user"}' data-ipsDialog-destructOnClose><i class="fa fa-exclamation-triangle fa-fw"></i> {lang="warn_user"}</a></li>
			{{endif}}
            {{if \IPS\Member::loggedIn()->modPermission('can_manage_alerts')}}
                <li class="ipsMenu_item"><a href='{url="app=core&module=modcp&controller=modcp&tab=alerts&action=create&user={$member->member_id}" seoTemplate="modcp_alerts"}' title='{lang="alert_send"}' data-ipsDialog data-ipsDialog-title='{lang="alert_send"}' data-ipsDialog-destructOnClose><i class="fa fa-bullhorn"></i> {lang="alert_send"}</a></li>
            {{endif}}
		</ul>
	{{endif}}
	
	</div>

{{if \IPS\Settings::i()->core_datalayer_enabled}}
<script>
    if ( IpsDataLayerConfig && !window.IpsDataLayerConfig && IpsDataLayerConfig._events.social_view.enabled ) {
        $('body').trigger( 'ipsDataLayer', {
            _key: 'social_view',
            _properties: {expression="json_encode(\IPS\core\DataLayer::i()->getMemberProfileEventProperties( $member, ['view_location' => 'hovercard'] ))" raw="true"}
        } );
    }
</script>
{{endif}}

</div>